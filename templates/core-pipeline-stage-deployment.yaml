{{- if (index .Values "core-pipeline-stage").enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cdp-forge.fullname" . }}-core-pipeline-stage
  labels:
    {{- include "cdp-forge.labels" . | nindent 4 }}
    app.kubernetes.io/component: core-pipeline-stage
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "cdp-forge.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: core-pipeline-stage
  template:
    metadata:
      labels:
        {{- include "cdp-forge.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: core-pipeline-stage
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000

      initContainers:
        {{- if (index .Values "core-pipeline-manager").enabled }}
        - name: wait-for-core-pipeline-manager
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z cdp-forge-core-pipeline-manager 80; do echo waiting for core-pipeline-manager; sleep 2; done;']
        {{- end }}

      containers:
      - name: core-pipeline-stage
        image: ghcr.io/cdpforge/core-pipeline-stage:{{ (index .Values "core-pipeline-stage").image.tag | default "latest" }}
        imagePullPolicy: {{ (index .Values "core-pipeline-stage").image.pullPolicy | default "IfNotPresent" }}

        ports:
        - name: http
          containerPort: 3000
          protocol: TCP

        {{- if (index .Values "core-pipeline-stage").resources }}
        resources:
          {{- toYaml (index .Values "core-pipeline-stage").resources | nindent 10 }}
        {{- end }}

        volumeMounts:
        - name: cluster-config
          mountPath: /app/dist/config
          readOnly: true

      volumes:
      - name: cluster-config
        secret:
          secretName: {{ include "cdp-forge.fullname" . }}-cluster-config
{{- end }}
