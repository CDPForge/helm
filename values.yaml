# CDP Forge Helm Chart Values

global:
  environment: production
  domain: cdp-forge.local

certmanager:
  enabled: true
  installCRDs: true
  namespace: cert-manager

pulsar:
  enabled: true
  volumes:
    persistence: true
    local_storage: false

  affinity:
    anti_affinity: true

  components:
    pulsar_manager: true

  zookeeper:
    replicaCount: 3
    affinity:
      anti_affinity: true
    resources:
      requests:
        memory: 256Mi
        cpu: 0.1
    volumes:
      useSeparateDiskForTxlog: false
      # use a persistent volume or emptyDir
      persistence: true
      data:
        name: data
        size: 20Gi
        local_storage: true
        selector: {}

  bookkeeper:
    # use a component name that matches your grafana configuration
    # so the metrics are correctly rendered in grafana dashboard
    replicaCount: 4
    affinity:
      anti_affinity: true
    resources:
      requests:
        memory: 512Mi
        cpu: 0.2
    volumes:
      # use a persistent volume or emptyDir
      persistence: true
      journal:
        name: journal
        size: 10Gi
        local_storage: true
          # storageClassName: existent-storage-class
      ledgers:
        name: ledgers
        size: 50Gi
        local_storage: true
          # storageClassName:

  autorecovery:
    affinity:
      anti_affinity: true
    resources:
      requests:
        memory: 64Mi
        cpu: 0.05

  victoria-metrics-k8s-stack:
    grafana:
      enabled: false

  pulsar_metadata:
    # resources for bin/pulsar initialize-cluster-metadata
    resources:
      requests:
        memory: 512Mi
        cpu: 1

  broker:
    replicaCount: 3
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      metrics: ~
      behavior: ~
    affinity:
      anti_affinity: true
    resources:
      requests:
        memory: 512Mi
        cpu: 0.2

  proxy:
    replicaCount: 3
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 3
      metrics: ~
      behavior: ~
    affinity:
      anti_affinity: true
    resources:
      requests:
        memory: 128Mi
        cpu: 0.2
    service:
      type: ClusterIP

  toolset:
    replicaCount: 1
    resources:
      requests:
        memory: 256Mi
        cpu: 0.1


  pulsar_manager:
    resources:
      requests:
        memory: 250Mi
        cpu: 0.1
    volumes:
      # use a persistent volume or emptyDir
      persistence: true
      data:
        name: data
        size: 128Mi
        local_storage: true
          # storageClassName: existent-storage-class,
    service:
      type: ClusterIP
      port: 9527
      targetPort: 9527
      annotations: {}
    adminService:
      type: ClusterIP
      port: 7750
      targetPort: 7750
      annotations: {}
    admin:
      existingSecret: ""
      ui_username: "pulsar"
      ui_password: "cdpforge"  # leave empty for random password
      db_username: "pulsar"
      db_password: "cdpforge"  # leave empty for random password

# Configurazione OpenSearch Helm Chart
opensearch:
  enabled: true
  version: 3.1.0
  # Configurazione cluster
  clusterName: "cdp-forge-opensearch"
  masterService: "cdp-forge-opensearch-cluster-master"
  
  # Configurazione nodo singolo con tutti i ruoli
  nodeGroup: "master"
  replicas: 3
  
  # Ruoli del nodo (tutti i ruoli in un singolo nodeGroup)
  roles:
    - master
    - ingest
    - data
    - remote_cluster_client
  
  # Configurazione risorse
  resources:
    requests:
      memory: "2Gi"
      cpu: "500m"
    limits:
      memory: "4Gi"
      cpu: "1000m"
  
  # Configurazione persistenza
  persistence:
    enabled: true
    size: 20Gi

  secretMounts:
    - name: certs
      secretName: opensearch-certs
      path: /usr/share/opensearch/config/certs
      defaultMode: 0600
    - name: admin-cert
      secretName: opensearch-admin-certs
      path: /usr/share/opensearch/config/admin-certs
      defaultMode: 0600

  security:
    enabled: true
    tls:
      http:
        enabled: true
      transport:
        enabled: true

  config:
    opensearch.yml: |
      plugins.security.ssl.transport.enabled: true
      plugins.security.ssl.transport.pemcert_filepath: certs/tls.crt
      plugins.security.ssl.transport.pemkey_filepath: certs/tls.key
      plugins.security.ssl.transport.pemtrustedcas_filepath: certs/ca.crt
      plugins.security.ssl.transport.enforce_hostname_verification: true
      plugins.security.ssl.http.enabled: true
      plugins.security.ssl.http.pemcert_filepath: certs/tls.crt
      plugins.security.ssl.http.pemkey_filepath: certs/tls.key
      plugins.security.ssl.http.pemtrustedcas_filepath: certs/ca.crt
      plugins.security.authcz.admin_dn:
        - "CN=admin"
      plugins.security.nodes_dn:
        - "CN=opensearch-cluster-master.{{ .Release.Namespace }}.svc.cluster.local"
        - "CN=opensearch-cluster-master"
        - "CN=opensearch-cluster-master.{{ .Release.Namespace }}"
        - "CN=opensearch-cluster-master.{{ .Release.Namespace }}.svc"        

  # Variabili d'ambiente aggiuntive per OpenSearch 3.1.0
  extraEnvs:
    - name: OPENSEARCH_INITIAL_ADMIN_PASSWORD
      value: "CdpForge@2024!"

# Configurazione OpenSearch Dashboards
opensearch-dashboards:
  enabled: true
  
  # Configurazione risorse
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  
  # Configurazione servizio
  service:
    type: ClusterIP
    port: 5601

  # Configurazione OpenSearch connection
  opensearchHosts: "https://opensearch-cluster-master:9200"
  
  # Configurazione sicurezza
  security:
    enabled: true
    adminPassword: "CdpForge@2024!"
    tls:
      enabled: true

# Configurazione MySQL Master-Replica con Automatic Failover
mysql:
  enabled: true
  
  # Configurazione autenticazione
  auth:
    rootPassword: "cdp-forge-root-2024"
    database: "cdpforge"
    username: "cdp_forge_user"
    password: "cdp-forge-user-2024"
    replicationPassword: "CdpForge@2024!"
  
  # Configurazione inizializzazione database con Flyway
  init:
    enabled: true
    flyway:
      enabled: true
      repository: "https://github.com/CDPForge/core-mysql.git"
      version: "9.22.3"
  
  # Configurazione replicazione
  primary:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
    service:
      type: ClusterIP
      port: 3306
  
  # Configurazione replica secondaria
  secondary:
    replicaCount: 2
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""
    resources:
      requests:
        memory: "1Gi"
        cpu: "500m"
      limits:
        memory: "2Gi"
        cpu: "1000m"
    service:
      type: ClusterIP
      port: 3306
  
  # Configurazione automatic failover
  architecture: replication
  replication:
    mode: asynchronous
    syncBinlog: 1
    innodbFlushLogAtTrxCommit: 1
  
  # Configurazione monitoring e health checks
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false  # Disabilitato per default - richiede Prometheus Operator
  
  # Configurazione backup
  backup:
    enabled: true
    cronjob:
      schedule: "0 2 * * *"  # Backup giornaliero alle 2:00
      retention: 7  # Mantieni backup per 7 giorni
  
  # Configurazione sicurezza
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  
  # Configurazione service
  service:
    type: ClusterIP
    port: 3306
    targetPort: 3306

# Configurazione Core Pipeline Manager
core-pipeline-manager:
  enabled: true
  
  # Configurazione immagine
  image:
    tag: "0.1.2"
    pullPolicy: IfNotPresent
  
  # Configurazione risorse
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  # Configurazione servizio
  service:
    type: ClusterIP
    port: 80

# Configurazione Core Pipeline Stage
core-pipeline-stage:
  enabled: true
  
  # Configurazione immagine
  image:
    tag: "0.1.2"
    pullPolicy: IfNotPresent
  
  # Configurazione risorse
  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  
  # Configurazione servizio
  service:
    type: ClusterIP
    port: 80

# Pipeline Output Stage
plugin-pipeline-output:
  enabled: true

  image:
    tag: "0.1.3"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 80

# Pipeline Geo Stage
plugin-pipeline-geo:
  enabled: true
  geoDbtoken: ""

  image:
    tag: "0.1.2"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 80

core-input:
  enabled: true

  image:
    tag: "0.1.2"
    pullPolicy: IfNotPresent

  resources:
    requests:
      memory: "512Mi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"

  service:
    type: ClusterIP
    port: 80